# see tmux(1)
# There are 4 types of options:
# server options (-s), session options, window options(-w), and pane options (-p).
set -g  allow-passthrough all                                               # https://sunaku.github.io/tmux-yank-osc52.html
set -g  automatic-rename on                                                 # Automaticily rename the window using the format string from automatic-rename-format
set -g  automatic-rename-format "#{s|$HOME|~|:pane_current_path}"           # Automaticily rename based on the current path of the pane, but replace $HOME with ~
set -g  base-index 1                                                        # Start window indexing at 1
set -g  bell-action none                                                    # Do nothing in response to a bell in a window
set -g  display-panes-time 3000                                             # prefix-q delay longer before showing pane number
set -g  default-shell "/usr/bin/fish"                                       # use fish shell
set -g  detach-on-destroy off                                               # closing a session (usually by ctrl-d on shell) doesn't detach tmux session
set -gs escape-time 0                                                       # Set the time in milliseconds for which tmux waits after an escape this is needed because otherwise hitting escape in vim within tmux is too slow for development
set -g  focus-events on                                                     # mentioned in nvim :checkhealth and https://vi.stackexchange.com/questions/18515/nvim-can-not-detect-focus-change-inside-tmux-sessions
set -g  message-style "fg=white reverse"
set -g  mode-keys vi                                                        # I prefer vim keybindings in copy mode
set -g  mode-style "fg=white reverse"                                               # change color theme when switching sessions (prefix s)
set -g  monitor-activity off                                                # don't want to highlight windows with activity in the status bar
set -g  mouse on                                                            # Enable mouse support, okay selections, and scrolling
set -g  pane-active-border-style "#{pane-border-style}"
set -g  pane-base-index 1
set -g  pane-border-style "fg=white dim"
set -g  popup-border-lines rounded                                          # stylize popup borders to be rounded
set -g  renumber-windows on                                                 # renumber windows so that they are always in order, even if you close one in the middle
# set-option -g  set-clipboard off                                                   # https://askubuntu.com/q/507214 https://gitlab.gnome.org/GNOME/vte/-/issues/2495
set -g  set-clipboard on
set -g  status-interval 1                                                   #
set -g  status-position top                                                 #
set -g  status-right "#(~/bin/tmux-status-right)"                           #
set -g  status-right-length 40                                              #
set -g  status-style "fg=white"                                             #
set -g  status-left-style "fg=grey"                                         #
set -g  status-left-length 40                                               #
set -g  status-left " #S"
set -ga terminal-features "*:hyperlinks"                                    # only has an effect on tmux 3.4 and higher
set -ga terminal-overrides ',*:Smulx=\E[4::%p1%dm'                          # undercurl support https://ryantravitz.com/blog/2023-02-18-pull-of-the-undercurl/
set -ga terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0  
set -g  visual-activity off                                                 #
set -g  visual-bell off                                                     # disable visual bell
set -g  visual-silence off                                                  #
set -g  window-status-current-format " #W"                                  #
set -g  window-status-current-style "fg=magenta"                            #
set -g  window-status-style "fg=white"                                      #
set -g  window-status-format " #W"                                          #
set -g  window-status-separator ''                                          #

# See default tmux keybindings
# https://github.com/tmux/tmux/blob/master/key-bindings.c

# if no client attached to a session named tray
unbind-key      `  ; bind-key -N "Toggle tray" ` if-shell '[ $(tmux list-clients -t tray | wc -l) -eq 0 ]' {
# split window and attach session
  split-window -l 15 -v -c "#{pane_current_path}" -e TMUX= "tmux new-session -A -X -s tray 'tmux set-option detach-on-destroy on; tmux set-option status-position bottom; /usr/bin/fish' "
} {
# detach all client from tray
  detach-client -s tray
}

unbind-key      -  ; bind-key -N "Split pane into top and bottom"                  - split-window -v -c "#{pane_current_path}"
unbind-key      \\ ; bind-key -N "Split pane into left and right"                 \\ split-window -h -c "#{pane_current_path}"
unbind-key      c  ; bind-key -N "Create a new window"                             c new-window -c "#{pane_current_path}"
unbind-key -n   c  ; bind-key -N "Create a new session in tree-mode" -n c if -F "#{==:#{pane_mode},tree-mode}" "command-prompt 'new-session -s %1'" "send c"
unbind-key      h  ; bind-key -N "Select the pane to the left of the active pane"  h select-pane -L
unbind-key      j  ; bind-key -N "Select the pane below the active pane"           j select-pane -D
unbind-key      k  ; bind-key -N "Select the pane above the active pane"           k select-pane -U
unbind-key      l  ; bind-key -N "Select the pane to the right of the active pane" l select-pane -R
unbind-key      o  ; bind-key -N "My 'spotlight' search"                           o display-popup -h 3 -E "~/bin/spotlight"
unbind-key      r  ; bind-key -N "Open a new pop-up rust terminal (and allow ctr-d to close the pop-up)" r display-popup -E "tmux new-session -A -s rust 'tmux set-option detach-on-destroy on; ~/.cargo/cargo/bin/evcxr'"
unbind-key      H  ; bind-key -N "Resize the pane left by 5"  -r -T prefix H resize-pane -L 5
unbind-key      J  ; bind-key -N "Resize the pane down by 5"  -r -T prefix J resize-pane -D 5
unbind-key      K  ; bind-key -N "Resize the pane up by 5"    -r -T prefix K resize-pane -U 5
unbind-key      L  ; bind-key -N "Resize the pane right by 5" -r -T prefix L resize-pane -R 5
unbind-key      S  ; bind-key -n C-g display-popup -E "tmux new-session -A -s scratch 'tmux set-option detach-on-destroy on; /usr/bin/fish'"
unbind-key      S  ; bind-key -N "Create a new session"                            S command-prompt -p "New Session:" "new-session -A -s '%%'" 
unbind-key      t  ; bind-key -N "Create a new window"                             t new-window -c "#{pane_current_path}"
unbind-key      v  ; bind-key -N "Enter vim copy mode"                             v copy-mode
unbind-key -n C-g  ; bind-key -N "Open a new scratch tmux session in a pop-up (and allow ctr-d to close the pop-up)" -n C-g display-popup -E "tmux new-session -A -s scratch 'tmux set-option detach-on-destroy on; /usr/bin/fish'"
unbind-key -n C-j  ; bind-key -N "Change pane if multiple panes, otherwise switch window" -n C-j if-shell "[ $(tmux list-panes | wc -l) -eq 1 ]" previous-window 'select-pane -D'
unbind-key -n C-k  ; bind-key -N "Change pane if multiple panes, otherwise switch window" -n C-k if-shell "[ $(tmux list-panes | wc -l) -eq 1 ]" next-window     'select-pane -U'
unbind-key -n M-l  ; bind-key -N "Select the pane to the right of the active pane if it exists" -n M-l if-shell "[ $(tmux list-panes | wc -l) -eq 1 ]" "send M-l" "select-pane -R"
unbind-key -n M-h  ; bind-key -N "Select the pane to the left of the active pane" -n M-h select-pane -L

unbind-key -T copy-mode-vi MouseDown1Pane ; bind-key -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection # Clear selection on mouse down (better emulate selection)
unbind-key -T copy-mode-vi MouseDragEnd1Pane # https://superuser.com/a/1479667
unbind-key -T copy-mode-vi v              ; bind-key -N "Start selecting text while already in copy mode" -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi y              ; bind-key -N "Yank text with y in copy mode" -T copy-mode-vi "y" send-keys -X copy-pipe "xclip -sel clip"
