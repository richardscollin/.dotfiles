# `man tmux` and search for corresponding command or option
set-option -g automatic-rename on
set-option -g automatic-rename-format "#{s|$HOME|~|:pane_current_path}"
set-option -g base-index 1
set-option -g bell-action none
set-option -g default-command fish
set-option -g default-shell "/usr/bin/fish" # current bashrc doesn't load nice things w/ login shell
set-option -g default-terminal "xterm-256color" # get colorschemes working in helix inside of tmux
set-option -ga terminal-overrides ",xterm-256color:Tc" # see https://github.com/tmux/tmux/issues/696 see https://stackoverflow.com/a/41786092 https://unix.stackexchange.com/a/734894
set-option -g detach-on-destroy off # closing a session (usually by ctrl-d on shell) doesn't detach tmux session
set-option -gs escape-time 0 # Set the time in milliseconds for which tmux waits after an escape this is needed because otherwise hitting escape in vim within tmux is too slow for development
set-option -g mode-keys vi
set-option -g monitor-activity off
set-option -g mouse on
set-option -g popup-border-lines rounded
set-option -g renumber-windows on
set-option -g set-clipboard off # https://askubuntu.com/q/507214
set-option -g set-titles
set-option -g set-titles-string "#{s|$HOME|~|:pane_current_path}"
set-option -g status-interval 1
set-option -g status-position top
set-option -g status-left-length 25
set-option -g status-style "fg=white"
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g window-status-current-format "#I:#W"
set-option -g window-status-current-style "fg=yellow"
set-option -g window-status-format "#I:#W"

unbind-key      -  ; bind-key -N "Split pane into top and bottom" - split-window -v
unbind-key      \\ ; bind-key -N "Split pane into left and right" \\ split-window -h
unbind-key      c  ; bind-key -N "Create a new window" c new-window -c "#{pane_current_path}"
unbind-key      h  ; bind-key -N "Select the pane to the left of the active pane"  h select-pane -L
unbind-key      j  ; bind-key -N "Select the pane above the active pane"           j select-pane -D
unbind-key      k  ; bind-key -N "Select the pane above the active pane"           k select-pane -U
unbind-key      l  ; bind-key -N "Select the pane to the right of the active pane" l select-pane -R
unbind-key      t  ; bind-key -N "Tmux session manager" t run-shell t
unbind-key      v  ; bind-key -N "Enter vim copy mode" v copy-mode
unbind-key    M-g  ; bind-key -N "Open a new scratch tmux session in a pop-up" -n M-g display-popup -E "tmux new-session -A -s scratch"
unbind-key -n C-j  ; bind-key -N "Change pane if multiple panes, otherwise switch window" -n C-j if-shell "[ $(tmux list-panes | wc -l) -eq 1 ]" previous-window 'select-pane -D'
unbind-key -n C-k  ; bind-key -N "Change pane if multiple panes, otherwise switch window" -n C-k if-shell "[ $(tmux list-panes | wc -l) -eq 1 ]" next-window     'select-pane -U'
unbind-key -n C-t  ; bind-key -N "Create a new window" -n C-t new-window -c "#{pane_current_path}"
unbind-key -n M-h  ; bind-key -N "Select the pane to the left of the active pane" -n M-h select-pane -L
unbind-key -n M-l  ; bind-key -N "Select the pane to the right of the active pane" -n M-l select-pane -R

unbind-key -T copy-mode-vi MouseDown1Pane ; bind-key -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection # Clear selection on mouse down (better emulate selection)
unbind-key -T copy-mode-vi MouseDragEnd1Pane # https://superuser.com/a/1479667
unbind-key -T copy-mode-vi v              ; bind-key -N "Start selecting text while already in copy mode" -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi y              ; bind-key -N "Yank text with y in copy mode" -T copy-mode-vi "y" send-keys -X copy-pipe "xclip -sel clip"
