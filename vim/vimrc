"----------------------------------------------------------------------------------------------
"switch between this.that and this->that
let g:switch_mapping = "<Leader>,"
let b:switch_custom_definitions = [
            \   {
            \     '\(\k\+\)\.': '\1->',
            \     '\(\k\+\)->': '\1.',
            \    }
            \ ]

"CamelCase Motion settings
" shift-w, shift-b, shift-e
" to move by camelCase word
map <S-W> <Plug>CamelCaseMotion_w
map <S-B> <Plug>CamelCaseMotion_b
map <S-E> <Plug>CamelCaseMotion_e

function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
endfunction

"TODO maybe integrate into plugin
let g:skeleton_replacements = {}
function! g:skeleton_replacements.UBASENAME()
    return toupper(fnamemodify(expand('%'), ':t:r'))
endfunction

let g:netrw_dirhistmax = 0 " disable netrw history file

filetype plugin indent on
set nocompatible
set smartindent
set tabstop=8
set shiftwidth=4
set softtabstop=4
set expandtab
autocmd BufNewFile,BufNew,BufRead TODO,*.md,*.html,*.css,*.js,*.vue,*.rb,*.html.erb set shiftwidth=2 softtabstop=2

"File specific settings
autocmd BufNewFile,BufNew,BufRead *.txt,*.html,*.md set wrap linebreak
autocmd BufNewFile,BufNew,BufRead *.c set colorcolumn=80
autocmd FileType c,cpp setlocal equalprg=clang-format
autocmd FileType cpp setlocal keywordprg=cppman
autocmd FileType py setlocal keywordprg=pydoc

set mouse=a
set wildmenu
set nocursorline "decreases latency on large files

"set spell
set spelloptions=camel " spell check on camel case too
set spellcapcheck= " disable capitalization error on first letter of string

syntax on
set nojoinspaces
set nowrap
set number
"set relativenumber

set encoding=utf-8
set laststatus=2

" Begin my config
let mapleader = ","
let g:mapleader = ","

"
" Custom mappings
nnoremap  ; :
inoremap jk <esc>
inoremap kj <esc>

"Change the keys for scrolling the entire screen
nnoremap <space> <C-d>
nnoremap <backspace> <C-u>

"Use minus to jump to end of line.
nnoremap - $
onoremap - $

"change line wrap down cursor behavior
nnoremap j gj
nnoremap k gk

"fix common typo
cnoremap q1 q!

"Ctags settings
set tags=./tags,tags,~/.vim/ctags/tags

"XDG_STATE_HOME viminfo
set viminfofile=~/.local/state/vim/viminfo

if has("xterm_clipboard")
    set clipboard=unnamedplus
endif

set t_Co=16 " I prefer using the 16 colors instead of 256

let g:ale_enabled = 1
"let g:ale_linters_explicit = 1
let g:ale_linters = { 'rust': ['analyzer'] }
" let g:ale_fixers_explicit = 1
let b:ale_fixers = {'rust': ['rustfmt']}
let g:rustfmt_autosave = 1

" config that applies to just this file
" :h modeline
" vim: nospell
